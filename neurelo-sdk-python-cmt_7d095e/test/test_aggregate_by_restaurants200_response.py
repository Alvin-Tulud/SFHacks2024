# coding: utf-8

"""
    Neurelo API Spec

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from neurelo.models.aggregate_by_restaurants200_response import AggregateByRestaurants200Response  # noqa: E501

class TestAggregateByRestaurants200Response(unittest.TestCase):
    """AggregateByRestaurants200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AggregateByRestaurants200Response:
        """Test AggregateByRestaurants200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AggregateByRestaurants200Response`
        """
        model = AggregateByRestaurants200Response()  # noqa: E501
        if include_optional:
            return AggregateByRestaurants200Response(
                data = neurelo.models.aggregate_restaurants.AggregateRestaurants(
                    _avg = neurelo.models.restaurants_avg_aggregate_output_type.RestaurantsAvgAggregateOutputType(
                        rating = 1.337, ), 
                    _count = neurelo.models.restaurants_count_aggregate_output_type.RestaurantsCountAggregateOutputType(
                        _all = 56, 
                        about = 56, 
                        name = 56, 
                        rating = 56, 
                        reviews = 56, ), 
                    _max = neurelo.models.restaurants_max_aggregate_output_type.RestaurantsMaxAggregateOutputType(
                        about = '', 
                        name = '', 
                        rating = 1.337, ), 
                    _min = neurelo.models.restaurants_min_aggregate_output_type.RestaurantsMinAggregateOutputType(
                        about = '', 
                        name = '', 
                        rating = 1.337, ), 
                    _sum = neurelo.models.restaurants_sum_aggregate_output_type.RestaurantsSumAggregateOutputType(
                        rating = 1.337, ), )
            )
        else:
            return AggregateByRestaurants200Response(
                data = neurelo.models.aggregate_restaurants.AggregateRestaurants(
                    _avg = neurelo.models.restaurants_avg_aggregate_output_type.RestaurantsAvgAggregateOutputType(
                        rating = 1.337, ), 
                    _count = neurelo.models.restaurants_count_aggregate_output_type.RestaurantsCountAggregateOutputType(
                        _all = 56, 
                        about = 56, 
                        name = 56, 
                        rating = 56, 
                        reviews = 56, ), 
                    _max = neurelo.models.restaurants_max_aggregate_output_type.RestaurantsMaxAggregateOutputType(
                        about = '', 
                        name = '', 
                        rating = 1.337, ), 
                    _min = neurelo.models.restaurants_min_aggregate_output_type.RestaurantsMinAggregateOutputType(
                        about = '', 
                        name = '', 
                        rating = 1.337, ), 
                    _sum = neurelo.models.restaurants_sum_aggregate_output_type.RestaurantsSumAggregateOutputType(
                        rating = 1.337, ), ),
        )
        """

    def testAggregateByRestaurants200Response(self):
        """Test AggregateByRestaurants200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
